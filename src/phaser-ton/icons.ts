import { DARK_COPY, DARK_DIAMOND, DARK_DISCONNECT, LIGHT_COPY, LIGHT_DIAMOND, LIGHT_DISCONNECT, buttonDesign } from "./consts";

const diamond = (color: string) => `<svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
<path fill-rule="evenodd" clip-rule="evenodd" d="M14.1839 17.7069C13.6405 18.6507 13.3688 19.1226 13.0591 19.348C12.4278 19.8074 11.5723 19.8074 10.941 19.348C10.6312 19.1226 10.3595 18.6507 9.81613 17.7069L5.52066 10.2464C4.76864 8.94024 4.39263 8.28717 4.33762 7.75894C4.2255 6.68236 4.81894 5.65591 5.80788 5.21589C6.29309 5 7.04667 5 8.55383 5H15.4462C16.9534 5 17.7069 5 18.1922 5.21589C19.1811 5.65591 19.7745 6.68236 19.6624 7.75894C19.6074 8.28717 19.2314 8.94024 18.4794 10.2464L14.1839 17.7069ZM11.1 16.3412L6.56139 8.48002C6.31995 8.06185 6.19924 7.85276 6.18146 7.68365C6.14523 7.33896 6.33507 7.01015 6.65169 6.86919C6.80703 6.80002 7.04847 6.80002 7.53133 6.80002H7.53134L11.1 6.80002V16.3412ZM12.9 16.3412L17.4387 8.48002C17.6801 8.06185 17.8008 7.85276 17.8186 7.68365C17.8548 7.33896 17.665 7.01015 17.3484 6.86919C17.193 6.80002 16.9516 6.80002 16.4687 6.80002L12.9 6.80002V16.3412Z" fill="${color}"/>
</svg>`;
const copy = (color: string) => `<svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
<path fill-rule="evenodd" clip-rule="evenodd" d="M7.76231 2.09998H10.2378C11.0458 2.09997 11.7067 2.09996 12.2438 2.14384C12.7997 2.18926 13.3018 2.28614 13.7707 2.52505C14.5045 2.89896 15.1011 3.49558 15.475 4.22941C15.7139 4.6983 15.8108 5.20038 15.8562 5.75629C15.9001 6.29337 15.9001 6.95422 15.9001 7.76227V8.1H16.2377C17.0458 8.09999 17.7066 8.09998 18.2437 8.14386C18.7996 8.18928 19.3017 8.28616 19.7706 8.52507C20.5044 8.89898 21.101 9.4956 21.4749 10.2294C21.7138 10.6983 21.8107 11.2004 21.8561 11.7563C21.9 12.2934 21.9 12.9542 21.9 13.7623V16.2377C21.9 17.0458 21.9 17.7066 21.8561 18.2437C21.8107 18.7996 21.7138 19.3017 21.4749 19.7706C21.101 20.5044 20.5044 21.101 19.7706 21.4749C19.3017 21.7138 18.7996 21.8107 18.2437 21.8561C17.7066 21.9 17.0458 21.9 16.2378 21.9H13.7623C12.9543 21.9 12.2934 21.9 11.7563 21.8561C11.2004 21.8107 10.6984 21.7138 10.2295 21.4749C9.49564 21.101 8.89901 20.5044 8.52511 19.7706C8.2862 19.3017 8.18931 18.7996 8.14389 18.2437C8.10001 17.7066 8.10002 17.0458 8.10003 16.2377V15.9H7.7623C6.95429 15.9 6.29338 15.9 5.75632 15.8561C5.20041 15.8107 4.69833 15.7138 4.22944 15.4749C3.49561 15.101 2.89899 14.5044 2.52508 13.7705C2.28617 13.3017 2.18929 12.7996 2.14387 12.2437C2.09999 11.7066 2.1 11.0458 2.10001 10.2377V7.76228C2.1 6.95424 2.09999 6.29336 2.14387 5.75629C2.18929 5.20038 2.28617 4.6983 2.52508 4.22941C2.89899 3.49558 3.49561 2.89896 4.22944 2.52505C4.69833 2.28614 5.20041 2.18926 5.75632 2.14384C6.29339 2.09996 6.95428 2.09997 7.76231 2.09998ZM8.10003 14.1V13.7623C8.10002 12.9542 8.10001 12.2934 8.14389 11.7563C8.18931 11.2004 8.2862 10.6983 8.52511 10.2294C8.89901 9.4956 9.49564 8.89898 10.2295 8.52507C10.6984 8.28616 11.2004 8.18928 11.7563 8.14386C12.2934 8.09998 12.9543 8.09999 13.7623 8.1H14.1001V7.79998C14.1001 6.94505 14.0994 6.35798 14.0622 5.90287C14.0259 5.45827 13.9593 5.21944 13.8712 5.0466C13.6699 4.65146 13.3486 4.3302 12.9535 4.12886C12.7806 4.04079 12.5418 3.97419 12.0972 3.93786C11.6421 3.90068 11.055 3.89998 10.2001 3.89998H7.80001C6.94508 3.89998 6.35801 3.90068 5.9029 3.93786C5.4583 3.97419 5.21947 4.04079 5.04663 4.12886C4.65149 4.3302 4.33023 4.65146 4.12889 5.0466C4.04082 5.21944 3.97422 5.45827 3.93789 5.90287C3.90071 6.35798 3.90001 6.94505 3.90001 7.79998V10.2C3.90001 11.0549 3.90071 11.642 3.93789 12.0971C3.97422 12.5417 4.04082 12.7805 4.12889 12.9534C4.33023 13.3485 4.65149 13.6698 5.04663 13.8711C5.21947 13.9592 5.4583 14.0258 5.9029 14.0621C6.35801 14.0993 6.94508 14.1 7.80001 14.1H8.10003ZM11.0467 10.1289C11.2195 10.0408 11.4583 9.97421 11.9029 9.93788C12.358 9.9007 12.9451 9.9 13.8 9.9H16.2C17.0549 9.9 17.642 9.9007 18.0971 9.93788C18.5417 9.97421 18.7805 10.0408 18.9534 10.1289C19.3485 10.3302 19.6698 10.6515 19.8711 11.0466C19.9592 11.2195 20.0258 11.4583 20.0621 11.9029C20.0993 12.358 20.1 12.9451 20.1 13.8V16.2C20.1 17.0549 20.0993 17.642 20.0621 18.0971C20.0258 18.5417 19.9592 18.7805 19.8711 18.9534C19.6698 19.3485 19.3485 19.6698 18.9534 19.8711C18.7805 19.9592 18.5417 20.0258 18.0971 20.0621C17.642 20.0993 17.0549 20.1 16.2 20.1H13.8C12.9451 20.1 12.358 20.0993 11.9029 20.0621C11.4583 20.0258 11.2195 19.9592 11.0467 19.8711C10.6515 19.6698 10.3303 19.3485 10.1289 18.9534C10.0408 18.7805 9.97424 18.5417 9.93791 18.0971C9.90073 17.642 9.90003 17.0549 9.90003 16.2V13.8C9.90003 12.9451 9.90073 12.358 9.93791 11.9029C9.97424 11.4583 10.0408 11.2195 10.1289 11.0466C10.3303 10.6515 10.6515 10.3302 11.0467 10.1289Z" fill="${color}"/>
</svg>`;
const disconnect = (color: string) => `<svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M8.7624 3.09998C7.95435 3.09997 7.29349 3.09996 6.75642 3.14384C6.2005 3.18926 5.69842 3.28614 5.22954 3.52505C4.4957 3.89896 3.89908 4.49558 3.52517 5.22941C3.28626 5.6983 3.18938 6.20038 3.14396 6.75629C3.10008 7.29337 3.10009 7.95421 3.1001 8.76226V15.2377C3.10009 16.0457 3.10008 16.7066 3.14396 17.2437C3.18938 17.7996 3.28626 18.3017 3.52517 18.7705C3.89908 19.5044 4.4957 20.101 5.22954 20.4749C5.69842 20.7138 6.2005 20.8107 6.75642 20.8561C7.29349 20.9 7.95434 20.9 8.76239 20.9H12.0001C12.4972 20.9 12.9001 20.497 12.9001 20C12.9001 19.5029 12.4972 19.1 12.0001 19.1H8.8001C7.94517 19.1 7.3581 19.0993 6.90299 19.0621C6.45839 19.0258 6.21956 18.9592 6.04672 18.8711C5.65158 18.6698 5.33032 18.3485 5.12898 17.9534C5.04092 17.7805 4.97431 17.5417 4.93798 17.0971C4.9008 16.642 4.9001 16.0549 4.9001 15.2V8.79998C4.9001 7.94505 4.9008 7.35798 4.93798 6.90287C4.97431 6.45827 5.04092 6.21944 5.12898 6.0466C5.33032 5.65146 5.65158 5.3302 6.04672 5.12886C6.21956 5.04079 6.45839 4.97419 6.90299 4.93786C7.3581 4.90068 7.94517 4.89998 8.8001 4.89998H12.0001C12.4972 4.89998 12.9001 4.49703 12.9001 3.99998C12.9001 3.50292 12.4972 3.09998 12.0001 3.09998H8.7624Z" fill="${color}"/>
<path d="M17.6364 7.36357C17.2849 7.01209 16.7151 7.01209 16.3636 7.36357C16.0121 7.71504 16.0121 8.28489 16.3636 8.63636L18.8272 11.1H9.00001C8.50295 11.1 8.10001 11.5029 8.10001 12C8.10001 12.497 8.50295 12.9 9.00001 12.9H18.8272L16.3636 15.3636C16.0121 15.715 16.0121 16.2849 16.3636 16.6364C16.7151 16.9878 17.2849 16.9878 17.6364 16.6364L21.6364 12.6364C21.9879 12.2849 21.9879 11.715 21.6364 11.3636L17.6364 7.36357Z" fill="${color}"/>
</svg>`;

const lightThemeDiamond = 'data:image/svg+xml;base64,' + btoa(diamond(buttonDesign.light.fontColor));
const darkThemeDiamond = 'data:image/svg+xml;base64,' + btoa(diamond(buttonDesign.dark.fontColor));
const lightThemeCopy = 'data:image/svg+xml;base64,' + btoa(copy(buttonDesign.light.fontColor));
const darkThemeCopy = 'data:image/svg+xml;base64,' + btoa(copy(buttonDesign.dark.fontColor));
const lightThemeDisconnect = 'data:image/svg+xml;base64,' + btoa(disconnect(buttonDesign.light.fontColor));
const darkThemeDisconnect = 'data:image/svg+xml;base64,' + btoa(disconnect(buttonDesign.dark.fontColor));

function loadIcons(manager: Phaser.Textures.TextureManager): Promise<void> {
    return new Promise((resolve) => {
        const assetsToLoad = [
            LIGHT_DIAMOND,
            DARK_DIAMOND,
            LIGHT_COPY,
            DARK_COPY,
            LIGHT_DISCONNECT,
            DARK_DISCONNECT
        ];
        manager.on('onload', function(textureName: string) {
            assetsToLoad.splice(assetsToLoad.indexOf(textureName), 1);
            if (assetsToLoad.length === 0) {
                resolve();
            }
        });
    
        manager.addBase64(LIGHT_DIAMOND, lightThemeDiamond);
        manager.addBase64(DARK_DIAMOND, darkThemeDiamond);
        manager.addBase64(LIGHT_COPY, lightThemeCopy);
        manager.addBase64(DARK_COPY, darkThemeCopy);
        manager.addBase64(LIGHT_DISCONNECT, lightThemeDisconnect);
        manager.addBase64(DARK_DISCONNECT, darkThemeDisconnect);
    });
}

export {
    loadIcons
}